#!/usr/bin/env node

/**
 * Script para testar a conex√£o com o MongoDB
 * Execute: node test-connection.js
 */

const mongoose = require('mongoose');
const config = require('./config');

console.log('üß™ Testando conex√£o com o MongoDB...');
console.log(`üì° URI: ${config.database.uri}`);

const testConnection = async () => {
  try {
    // Conectar ao MongoDB
    await mongoose.connect(config.database.uri, config.database.options);
    console.log('‚úÖ Conex√£o com MongoDB estabelecida com sucesso!');
    
    // Testar opera√ß√µes b√°sicas
    console.log('üîç Testando opera√ß√µes b√°sicas...');
    
    // Listar bancos de dados
    const adminDb = mongoose.connection.db.admin();
    const dbList = await adminDb.listDatabases();
    console.log('üìä Bancos dispon√≠veis:', dbList.databases.map(db => db.name));
    
    // Verificar se o banco walletInvest existe
    const walletInvestExists = dbList.databases.some(db => db.name === 'walletInvest');
    if (walletInvestExists) {
      console.log('‚úÖ Banco "walletInvest" encontrado!');
      
      // Testar conex√£o com o banco espec√≠fico
      const db = mongoose.connection.db;
      const collections = await db.listCollections().toArray();
      console.log('üìÅ Cole√ß√µes dispon√≠veis:', collections.map(col => col.name));
    } else {
      console.log('‚ö†Ô∏è Banco "walletInvest" n√£o encontrado. Execute "npm run init-db" primeiro.');
    }
    
    console.log('üéâ Teste de conex√£o conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro ao conectar com MongoDB:', error.message);
    console.log('\nüí° Poss√≠veis solu√ß√µes:');
    console.log('1. Verifique se o MongoDB est√° rodando');
    console.log('2. Verifique se a porta 27017 est√° livre');
    console.log('3. Verifique se n√£o h√° firewall bloqueando');
    console.log('4. Execute: mongod (para iniciar o MongoDB)');
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüî¥ MongoDB n√£o est√° rodando. Inicie o servi√ßo:');
      console.log('Windows: Gerenciador de Servi√ßos ‚Üí MongoDB ‚Üí Iniciar');
      console.log('Linux/macOS: sudo systemctl start mongod');
    }
    
    process.exit(1);
  } finally {
    // Fechar conex√£o
    await mongoose.disconnect();
    console.log('üîå Conex√£o fechada.');
  }
};

// Executar teste
testConnection();
